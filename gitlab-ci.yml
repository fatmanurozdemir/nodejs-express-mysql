stages:
  - build
  - push

variables:
  IMAGE_NAME: "fatmanurdocker/nodejs-express-mysql"
  DOCKER_REGISTRY: "docker.io"
  DOCKER_TAG: "0.1"
  GITHUB_REPO: "https://github.com/fatmanurozdemir/nodejs-express-mysql.git"

# Step 1: Build the Docker Image
build:
  stage: build
  image: docker:20.10.7  # Use Docker image
  services:
    - docker:20.10-dind  # Docker-in-Docker service for building Docker images
  before_script:
    - apk add --no-cache git  # Install git to clone the GitHub repo
  script:
    - git clone $GITHUB_REPO
    - cd nodejs-express-mysql
    - docker build -t $DOCKER_REGISTRY/$IMAGE_NAME:$DOCKER_TAG .
    - docker save $DOCKER_REGISTRY/$IMAGE_NAME:$DOCKER_TAG -o /builds/Fatmanur/nodejs-express-mysql-ci/docker_image.tar
    - ls -l /builds/Fatmanur/nodejs-express-mysql-ci/  # Verify the file exists
  artifacts:
    paths:
      - docker_image.tar  # Save the file as an artifact
    expire_in: 1 hour  # Optional: Limit the time the artifact is stored

# Step 2: Push the Docker Image to DockerHub
push:
  stage: push
  image: docker:20.10.7
  services:
    - docker:20.10-dind
  before_script:
    - apk add --no-cache git
  script:
    - docker load < docker_image.tar  # Load the saved image
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker push $DOCKER_REGISTRY/$IMAGE_NAME:$DOCKER_TAG  # Push the Docker image to DockerHub
  dependencies:
    - build  # Depend on the 'build' job to access its artifacts
